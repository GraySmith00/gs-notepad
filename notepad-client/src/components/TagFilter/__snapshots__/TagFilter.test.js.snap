// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TagFilter component should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TagFilter
    setTagFilter={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <select>
        <option
          value="all"
        >
          All
        </option>
        <option
          value="work"
        >
          Work
        </option>
        <option
          value="personal"
        >
          Personal
        </option>
        <option
          value="hobby"
        >
          Hobby
        </option>
      </select>,
      "className": "tag-filter",
      "onChange": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <option
            value="all"
          >
            All
          </option>,
          <option
            value="work"
          >
            Work
          </option>,
          <option
            value="personal"
          >
            Personal
          </option>,
          <option
            value="hobby"
          >
            Hobby
          </option>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "All",
            "value": "all",
          },
          "ref": null,
          "rendered": "All",
          "type": "option",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Work",
            "value": "work",
          },
          "ref": null,
          "rendered": "Work",
          "type": "option",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Personal",
            "value": "personal",
          },
          "ref": null,
          "rendered": "Personal",
          "type": "option",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Hobby",
            "value": "hobby",
          },
          "ref": null,
          "rendered": "Hobby",
          "type": "option",
        },
      ],
      "type": "select",
    },
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <select>
          <option
            value="all"
          >
            All
          </option>
          <option
            value="work"
          >
            Work
          </option>
          <option
            value="personal"
          >
            Personal
          </option>
          <option
            value="hobby"
          >
            Hobby
          </option>
        </select>,
        "className": "tag-filter",
        "onChange": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <option
              value="all"
            >
              All
            </option>,
            <option
              value="work"
            >
              Work
            </option>,
            <option
              value="personal"
            >
              Personal
            </option>,
            <option
              value="hobby"
            >
              Hobby
            </option>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "All",
              "value": "all",
            },
            "ref": null,
            "rendered": "All",
            "type": "option",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Work",
              "value": "work",
            },
            "ref": null,
            "rendered": "Work",
            "type": "option",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Personal",
              "value": "personal",
            },
            "ref": null,
            "rendered": "Personal",
            "type": "option",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Hobby",
              "value": "hobby",
            },
            "ref": null,
            "rendered": "Hobby",
            "type": "option",
          },
        ],
        "type": "select",
      },
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
